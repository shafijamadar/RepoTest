1) Difference between equals() and = = ?
Ans:-  equals() - Is used to compare inner contents two objects. This can be achived by overriding equals method.
		== - It is used to compare premative types.
		
2) Difference between char Array and String Array?
Ans:- String a[] = new String[2];
	  a[0]="Shafi";
	  Char b[]= new Char[2];
	  
3) Is null is keyword?
Ans:- Yes, null is keyword.
	int i=null; - That means i is not pointing to anywhere in memory

4) What is the default value value of boolean?
Ans:- Default value of is false.
	  Default value of int is 0
	  Default value of object reference is null
	  
5) Difference between String and Stringbuffer ?
Ans:- Every string function a returns a new object 
	  String s="Hello There"; - This will create a new object in String Constant pool.
	  s=s.subString(0,3); - subString will return a new object in memory and start pointing towards it.
	  
	  String buffer - Prevents it from Creating a new Object.
	  
	  StringBuffer buffer= new StringBuffer();
	  buffer.append("A");
	  buffer.append("B"); - Append function will keeps adding into previous string 
	  System.out.println(buffer);
	  
	  BufferString methods do not return a new object.
	  
6) Class.forName(Firefoxdriver);
Ans:- It is capable of creating an object of firefox driver.

7) If we write FileInputStream statments in try block, what are the statements will write in finally block ?
Ans:- If we have Read a file in try block and some exception will occur then it will go into catch block, and the connection for file remains open. If we 	   write finally the file connection will be closed.

	  try {
		  FileInputStream ip= new FileInputStream("file location");
			// Read the file and write
	  }
	  catch(Execption e){
		  
	  }
	  finally{
		  ip.close();
	  }
	  
	  
	  List - We can add duplicate values in list 
	  ArrayList is dynamically growing,
	  ArrayList - There is order 
	  ArrayList is inbuild class in java which can be used to create dynamically growing data structure
	  
	  ArrayList list=new ArrayList();
	  list.add("A"); // 0 index
	  list.add("B");
	  list.add("C");
	  list.add("D"); // 3 index
	  
	  list.get(2);
	  list.size();
	  
	  ArrayList<String> l= new ArrayList<String>();
	  l.add("Shafi");
	  l.add("Shafi");
	  l.add("Zensar");
	  
	  System.out.println(l.size());
	  
	  Set - We can have only unqiue values in set
	  
	  HastSet - There is no order
	  
	  HashSet<String> hs= new HashSet<String>();
	  l.add("Shafi");
	  l.add("Shafi");
	  l.add("Zensar");
	  
	  HashTable is thred safe - It means if 2 directly access same programs, then only one will be able to change it at one time
	  In HashTable you cannot have key and value as null
	  
	  HashTable<String,String> ht=new HashTable<String,String>();
	  ht.put("name","Selenium");
	  ht.put(null,null);
	  
	  package Module7;

import java.util.Hashtable;

public class HashTableDemo {

	public static void main(String[] args) {

		Hashtable<String, String> table1= new Hashtable<String, String>();
		table1.put("City1", "Pune");
		table1.put("City2", "London");
		table1.put("City3", "Sandton");
		table1.put("City3", "Sandton");
		
		Hashtable<String, String> table2= new Hashtable<String, String>();
		table2.put("City1", "04564");
		table2.put("City2", "04531");
		table2.put("City3", "45121");
		table2.put("City3", "98712");
		
		Hashtable<String, Hashtable<String, String>> table= new Hashtable<String, Hashtable<String, String>>();
		table.put("name", table1);
		table.put("zip", table2);
		
		System.out.println(table.size());
		System.out.println(table.get("name").get("City2"));
		System.out.println(table.get("zip").get("City2"));
		
		
	}

}

	  
	  
	  
	  HashMap<String,String> hm= new HashMap<String,String>();
	  hm.put("name","Selenium")
	  
	  When to use HashTable in Selenium?
	  It can be used to store a data
	  
	  Reflection API - if variable name and method name is same then we can use Reflection API to call method in the class
	  
	  package Module7;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;



public class ReflectionAPIDemo {

	// Reflection API will be used to make a hybrid framework or keyword driven framework
	// this will refer the keyword used in excel file and call the corresponding method
	public static void main(String[] args) {
		
		String x="SampleTest"; 
		
		Method method= ReflectionAPI.class.getMethod(x, String.class);
		method.invoke(method, "hello");

		System.out.println("end");
		
	}
	
	public static void sampleTest(String x){
		System.out.println("In Sample Test-- " +x);
	}
	
	

}

====================== TestNG ==================================
Return type of DataProvider is Object array.
What is the problems are faced in TestNG?

If asserstion fails program stop

Default report is not very impressive
Maven to Generate Reports

Sharing same web instance among multiple test cases that time it was bit tough
